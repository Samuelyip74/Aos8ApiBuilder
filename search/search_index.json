{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"getting-started/","text":"Getting Started \u00b6 Install Aos8ApiBuilder \u00b6 Before you can use Aos8ApiBuilder, you\u2019ll need to install it via pip. To install the library, type \u201cpip install aos8-api\u201d Write your first API call \u00b6 Installed Aos8ApiBuilder already? Good. Now try the below tutorial, which walks you through creating a basic API call. import pprint from ApiBuilder import AosApiClientBuilder client = ( AosApiClientBuilder() .setBaseUrl(\"https://<ip-address-of-omniswitch>\") .setUsername(\"<username>\") .setPassword(\"<password>\") .build() ) result = client.interface.admin_enable(\"1/1/28-30\") if result.success: print(\"\u2705 Operation successfully\") pprint.pprint(result.output) else: print(f\"\u274c Operation failed (diag={result.diag}): {result.error}\")","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"","title":"Getting Started"},{"location":"getting-started/#install-aos8apibuilder","text":"Before you can use Aos8ApiBuilder, you\u2019ll need to install it via pip. To install the library, type \u201cpip install aos8-api\u201d","title":"Install Aos8ApiBuilder"},{"location":"getting-started/#write-your-first-api-call","text":"Installed Aos8ApiBuilder already? Good. Now try the below tutorial, which walks you through creating a basic API call. import pprint from ApiBuilder import AosApiClientBuilder client = ( AosApiClientBuilder() .setBaseUrl(\"https://<ip-address-of-omniswitch>\") .setUsername(\"<username>\") .setPassword(\"<password>\") .build() ) result = client.interface.admin_enable(\"1/1/28-30\") if result.success: print(\"\u2705 Operation successfully\") pprint.pprint(result.output) else: print(f\"\u274c Operation failed (diag={result.diag}): {result.error}\")","title":"Write your first API call"},{"location":"intro/","text":"Aos8ApiBuilder \u00b6 The Aos8ApiBuilder class provides an interface to construct, configure, and manage API endpoint groups for interacting with Alcatel-Lucent OmniSwitch devices using the AOS8 CLI over HTTP. It acts as the main orchestrator for initializing the client and organizing the available API modules. The builder is made up of two key classes and one data model: ApiBuilder - A class to initialize the ApiBuilder with the OmniSwitch parameters (i.e. BaseURL, username, password etc). ApiClient - A class that interact with OmniSwitch RestFUL API via GET, POST, PUT DELETE methods. ApiResult - A data model for reading the results from OmniSwitch interaction. The API endpoints extend ApiClient to interact with OmniSwitch for management functions, such as configuring VLAN, IP, OSPF etc. You are welcome to develop and extend ApiClient to include custom API if not already available.","title":"Introduction"},{"location":"intro/#aos8apibuilder","text":"The Aos8ApiBuilder class provides an interface to construct, configure, and manage API endpoint groups for interacting with Alcatel-Lucent OmniSwitch devices using the AOS8 CLI over HTTP. It acts as the main orchestrator for initializing the client and organizing the available API modules. The builder is made up of two key classes and one data model: ApiBuilder - A class to initialize the ApiBuilder with the OmniSwitch parameters (i.e. BaseURL, username, password etc). ApiClient - A class that interact with OmniSwitch RestFUL API via GET, POST, PUT DELETE methods. ApiResult - A data model for reading the results from OmniSwitch interaction. The API endpoints extend ApiClient to interact with OmniSwitch for management functions, such as configuring VLAN, IP, OSPF etc. You are welcome to develop and extend ApiClient to include custom API if not already available.","title":"Aos8ApiBuilder"},{"location":"api/ApiBuilder/","text":"Aos8ApiBuilder Class \u00b6 AosApiClientBuilder \u00b6 A builder class for creating and configuring an instance of AosApiClient . __init__ () \u00b6 Initialize the builder with default configuration. build () \u00b6 Finalize the builder and return an instance of AosApiClient . Returns: AosApiClient \u2013 A configured AosApiClient instance. Raises: ValueError \u2013 If any required fields are missing. setBaseUrl ( base_url ) \u00b6 Set the base URL for the API. Parameters: base_url ( str ) \u2013 The base URL of the API. Returns: AosApiClientBuilder \u2013 The builder instance. setDebug ( debug ) \u00b6 Enable or disable debug mode. Parameters: debug ( bool ) \u2013 Whether to enable debug logging. Returns: AosApiClientBuilder \u2013 The builder instance. setPassword ( password ) \u00b6 Set the API password. Parameters: password ( str ) \u2013 The API password. Returns: AosApiClientBuilder \u2013 The builder instance. setUsername ( username ) \u00b6 Set the API username. Parameters: username ( str ) \u2013 The API username. Returns: AosApiClientBuilder \u2013 The builder instance. setVerifySSL ( verify ) \u00b6 Enable or disable SSL verification. Parameters: verify ( bool ) \u2013 Whether to verify SSL certificates. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"ApiBuilder"},{"location":"api/ApiBuilder/#aos8apibuilder-class","text":"","title":"Aos8ApiBuilder Class"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder","text":"A builder class for creating and configuring an instance of AosApiClient .","title":"AosApiClientBuilder"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.__init__","text":"Initialize the builder with default configuration.","title":"__init__"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.build","text":"Finalize the builder and return an instance of AosApiClient . Returns: AosApiClient \u2013 A configured AosApiClient instance. Raises: ValueError \u2013 If any required fields are missing.","title":"build"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.setBaseUrl","text":"Set the base URL for the API. Parameters: base_url ( str ) \u2013 The base URL of the API. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"setBaseUrl"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.setDebug","text":"Enable or disable debug mode. Parameters: debug ( bool ) \u2013 Whether to enable debug logging. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"setDebug"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.setPassword","text":"Set the API password. Parameters: password ( str ) \u2013 The API password. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"setPassword"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.setUsername","text":"Set the API username. Parameters: username ( str ) \u2013 The API username. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"setUsername"},{"location":"api/ApiBuilder/#Aos8ApiBuilder.ApiBuilder.AosApiClientBuilder.setVerifySSL","text":"Enable or disable SSL verification. Parameters: verify ( bool ) \u2013 Whether to verify SSL certificates. Returns: AosApiClientBuilder \u2013 The builder instance.","title":"setVerifySSL"},{"location":"api/ApiClient/","text":"AosApiClient \u00b6 API client for interacting with Alcatel-Lucent OmniSwitch AOS8 HTTP API. This client provides a high-level interface for authentication and making GET, POST, PUT, and DELETE requests to various AOS8 API endpoints. __init__ ( username , password , base_url , verify_ssl = False , debug = False ) \u00b6 Initialize the AOS API client and log in. Parameters: username ( str ) \u2013 AOS API username. password ( str ) \u2013 AOS API password. base_url ( str ) \u2013 Base URL of the AOS device. verify_ssl ( bool , default: False ) \u2013 Whether to verify SSL certificates. debug ( bool , default: False ) \u2013 Enable debug logging. close () \u00b6 Close the underlying HTTP connection pool. delete ( path , ** kwargs ) \u00b6 Send a DELETE request. Parameters: path ( str ) \u2013 API endpoint path. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object. get ( path , ** kwargs ) \u00b6 Send a GET request. Parameters: path ( str ) \u2013 API endpoint path. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object. post ( path , data = None , ** kwargs ) \u00b6 Send a POST request. Parameters: path ( str ) \u2013 API endpoint path. data ( dict , default: None ) \u2013 Dictionary to send in the body. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object. put ( path , data = None , ** kwargs ) \u00b6 Send a PUT request. Parameters: path ( str ) \u2013 API endpoint path. data ( dict , default: None ) \u2013 Dictionary to send in the body. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object.","title":"ApiClient"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient","text":"API client for interacting with Alcatel-Lucent OmniSwitch AOS8 HTTP API. This client provides a high-level interface for authentication and making GET, POST, PUT, and DELETE requests to various AOS8 API endpoints.","title":"AosApiClient"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.__init__","text":"Initialize the AOS API client and log in. Parameters: username ( str ) \u2013 AOS API username. password ( str ) \u2013 AOS API password. base_url ( str ) \u2013 Base URL of the AOS device. verify_ssl ( bool , default: False ) \u2013 Whether to verify SSL certificates. debug ( bool , default: False ) \u2013 Enable debug logging.","title":"__init__"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.close","text":"Close the underlying HTTP connection pool.","title":"close"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.delete","text":"Send a DELETE request. Parameters: path ( str ) \u2013 API endpoint path. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object.","title":"delete"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.get","text":"Send a GET request. Parameters: path ( str ) \u2013 API endpoint path. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object.","title":"get"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.post","text":"Send a POST request. Parameters: path ( str ) \u2013 API endpoint path. data ( dict , default: None ) \u2013 Dictionary to send in the body. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object.","title":"post"},{"location":"api/ApiClient/#Aos8ApiBuilder.ApiClient.AosApiClient.put","text":"Send a PUT request. Parameters: path ( str ) \u2013 API endpoint path. data ( dict , default: None ) \u2013 Dictionary to send in the body. **kwargs \u2013 Additional parameters for the request. Returns: Response \u2013 Response object.","title":"put"},{"location":"api/models/","text":"ApiResult dataclass \u00b6 Standard result object for API or command execution responses. Attributes: success ( bool ) \u2013 Indicates whether the operation was successful. diag ( int ) \u2013 Diagnostic or status code from the operation. error ( Optional [ Union [ str , List [ str ]]] ) \u2013 Error message(s), if any. output ( Optional [ str ] ) \u2013 Raw output from the operation, if applicable. data ( Any ) \u2013 Parsed or structured result data.","title":"Models"},{"location":"api/models/#Aos8ApiBuilder.models.ApiResult","text":"Standard result object for API or command execution responses. Attributes: success ( bool ) \u2013 Indicates whether the operation was successful. diag ( int ) \u2013 Diagnostic or status code from the operation. error ( Optional [ Union [ str , List [ str ]]] ) \u2013 Error message(s), if any. output ( Optional [ str ] ) \u2013 Raw output from the operation, if applicable. data ( Any ) \u2013 Parsed or structured result data.","title":"ApiResult"},{"location":"endpoints/interface/","text":"InterfaceEndpoint \u00b6 Bases: BaseEndpoint Provides interface-related configuration and status management endpoints for Alcatel-Lucent OmniSwitch using AOS CLI commands via API client. admin_disable ( port ) \u00b6 Disable administrative state of the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. admin_enable ( port ) \u00b6 Enable administrative state of the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. autoneg_disable ( port ) \u00b6 Disable auto-negotiation on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. autoneg_enable ( port ) \u00b6 Enable auto-negotiation on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. clear_statistics ( target , stat_type , cli_only = False ) \u00b6 Clear interface statistics counters (Layer 2 or TDR). Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d or \u201c1/3/1-4\u201d). stat_type ( str ) \u2013 \u201cl2-statistics\u201d or \u201ctdr-statistics\u201d. cli_only ( bool , default: False ) \u2013 Whether to include \u201ccli\u201d for l2-statistics. Returns: ApiResult \u2013 ApiResult of the CLI command. Raises: ValueError \u2013 If input is invalid. clear_violation ( target , is_linkagg = False ) \u00b6 Clears all the MAC address violation logs for a specified port or link aggregate. Parameters: target ( str ) \u2013 Port in the format \u2018chassis/slot/port[-port2]\u2019 or linkagg ID/range like \u20181-2\u2019. is_linkagg ( bool , default: False ) \u2013 If True, clears violation for a linkagg; otherwise, clears for port(s). Returns: ApiResult \u2013 ApiResult from the CLI API. epp_disable ( port ) \u00b6 Disable EPP on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. epp_enable ( port ) \u00b6 Enable EPP on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status. get_interface ( port ) \u00b6 Retrieve detailed status of a specific port. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d. Returns: Optional [ dict ] \u2013 A dictionary of parsed interface details or None if the request fails. list () \u00b6 Retrieve the status of all interfaces. Returns: ApiResult \u2013 An ApiResult with parsed interface status list if available. set_alias ( port , alias ) \u00b6 Set or clear the alias (description) for a single port. Parameters: port ( str ) \u2013 A single port string (e.g., \u201c1/1/1\u201d). alias ( str ) \u2013 Alias string (e.g., \u201cUplink to Core\u201d) or empty \u201c\u201d to clear. Returns: ApiResult \u2013 An ApiResult with the updated interface detail. Raises: ValueError \u2013 If a port range is given (not supported by this command). set_ddm_status ( state ) \u00b6 Configures the Digital Diagnostics Monitoring (DDM) administrative status. Parameters: state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to turn on DDM monitoring; \u201cdisable\u201d to turn it off. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If an invalid state is provided. set_duplex ( target , mode ) \u00b6 Set duplex mode for a port, port range, or slot. Parameters: target ( str ) \u2013 Port (e.g., \u201c1/3/1\u201d), port range (e.g., \u201c1/3/1-4\u201d), or slot (e.g., \u201c1/3\u201d). mode ( str ) \u2013 One of \u201cfull\u201d, \u201chalf\u201d, or \u201cauto\u201d. Returns: ApiResult \u2013 An ApiResult with updated interface status if applicable. Raises: ValueError \u2013 If duplex mode is invalid. set_eee ( target , state ) \u00b6 Enables or disables Energy Efficient Ethernet (EEE) on the specified port(s) or slot. Parameters: target ( str ) \u2013 The interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to turn on EEE, \u201cdisable\u201d to turn it off. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If state is not \u201cenable\u201d or \u201cdisable\u201d. set_flood_limit ( target , traffic_type , rate_mode , rate_value , low_threshold = None ) \u00b6 Configure flood limit settings for broadcast, multicast, unknown unicast, or all traffic types. Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). traffic_type ( str ) \u2013 One of: \u201cbcast\u201d, \u201cmcast\u201d, \u201cuucast\u201d, \u201call\u201d. rate_mode ( str ) \u2013 One of: \u201cpps\u201d, \u201cmbps\u201d, \u201ccap%\u201d, \u201cenable\u201d, \u201cdisable\u201d, \u201cdefault\u201d. rate_value ( Union [ int , Literal ['enable', 'disable', 'default']] ) \u2013 The value for the selected rate_mode, or \u201cenable\u201d/\u201ddisable\u201d/\u201ddefault\u201d. low_threshold ( Optional [ int ] , default: None ) \u2013 Optional low threshold value (must be lower than rate_value, when applicable). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If input validation fails. set_flood_limit_action ( target , traffic_type , action ) \u00b6 Configure the action taken when flood rate limits are violated for a given traffic type. Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). traffic_type ( Literal ['bcast', 'mcast', 'uucast', 'all'] ) \u2013 One of: \u201cbcast\u201d, \u201cmcast\u201d, \u201cuucast\u201d, \u201call\u201d. action ( Literal ['shutdown', 'trap', 'default'] ) \u2013 One of: \u201cshutdown\u201d, \u201ctrap\u201d, \u201cdefault\u201d. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If any argument is invalid. set_hybrid_mode ( target , mode ) \u00b6 Configures the mode of a combo port to either fiber or copper. Parameters: target ( str ) \u2013 The interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) mode ( Literal ['fiber', 'copper'] ) \u2013 \u201cfiber\u201d or \u201ccopper\u201d Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If mode is not \u201cfiber\u201d or \u201ccopper\u201d. set_ingress_bandwidth ( target , action ) \u00b6 Configures ingress bandwidth settings on the specified slot or port(s). Parameters: target ( str ) \u2013 Target slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). action ( Union [ Literal ['enable', 'disable'], int ] ) \u2013 \u201cenable\u201d, \u201cdisable\u201d, or an integer Mbps value. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If invalid action value. set_interface ( port , parameter , value ) \u00b6 Set an interface parameter and return updated status for all affected ports. Parameters: port ( str ) \u2013 Port or range string, e.g., \u201c1/1/1\u201d or \u201c1/1/1-3\u201d. parameter ( str ) \u2013 One of \u201cadmin-state\u201d, \u201cautoneg\u201d, or \u201cepp\u201d. value ( str ) \u2013 \u201cenable\u201d or \u201cdisable\u201d. Returns: ApiResult \u2013 An ApiResult with a list of updated interface statuses. set_link_trap ( target , state ) \u00b6 Enables or disables link trap messages on the specified interface(s). Parameters: target ( str ) \u2013 Target slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/2/1\u201d, \u201c1/1/1-6\u201d). state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to generate trap messages when port changes state, \u201cdisable\u201d otherwise. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If an invalid state is provided. set_loopback ( port , enable = True ) \u00b6 Enables or disables loopback mode for the specified front-panel port. Parameters: port ( str ) \u2013 The front-panel port(s) in the format: - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) enable ( bool , default: True ) \u2013 True to enable loopback, False to disable using the \u2018no\u2019 form. Returns: ApiResult \u2013 ApiResult from the CLI API. set_max_frame_size ( target , size ) \u00b6 Configure the maximum frame size on a port or slot. Parameters: target ( str ) \u2013 Target slot (e.g. \u201c1/3\u201d) or port/port-range (e.g. \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). size ( int ) \u2013 Frame size in bytes (valid range: 1518 to 9216). Returns: ApiResult \u2013 ApiResult of the CLI command. Raises: ValueError \u2013 If the target or size is invalid. set_portgroup_speed ( port_group_number , slot , group_range , speed ) \u00b6 Configures the speed of the ports within a port group. Parameters: port_group_number ( int ) \u2013 The port group number (e.g., 1, 2, 3\u2026). slot ( str ) \u2013 The chassis/slot identifier (e.g., \u201c1/1\u201d). group_range ( str ) \u2013 The group or group range (e.g., \u201c1\u201d, \u201c2-4\u201d). speed ( Literal ['auto', '25G', '10G'] ) \u2013 The desired speed for the port group (\u201cauto\u201d, \u201c25G\u201d, or \u201c10G\u201d). Returns: ApiResult \u2013 ApiResult from the CLI API. set_speed ( target , speed ) \u00b6 Set the speed for one or more interfaces. Parameters: target ( str ) \u2013 Port or range string, e.g., \u201c1/1/1\u201d or \u201c1/1/1-3\u201d. speed ( str ) \u2013 Allowed values include \u201c10\u201d, \u201c100\u201d, \u2026, \u201c100000\u201d, \u201cauto\u201d, or \u201cmax 100\u201d/\u201dmax 1000\u201d/etc. Returns: ApiResult \u2013 An ApiResult with updated interface status per affected port. Raises: ValueError \u2013 If the speed value is invalid. set_violation_recovery_maximum ( scope , value , target = None ) \u00b6 Configures the maximum number of recovery attempts for MAC address violation recovery. Parameters: scope ( Literal ['global', 'slot', 'port'] ) \u2013 \u201cglobal\u201d applies to all ports, \u201cslot\u201d applies to a chassis/slot, \u201cport\u201d applies to a port or range. value ( Union [ int , Literal ['infinite', 'default']] ) \u2013 Integer (0\u201350), \u201cinfinite\u201d, or \u201cdefault\u201d. target ( Optional [ str ] , default: None ) \u2013 Optional. Required for \u201cslot\u201d or \u201cport\u201d. E.g., \u20181/1\u2019 (slot), \u20181/1/1\u2019, or \u20181/1/1-3\u2019 (ports). Returns: ApiResult \u2013 ApiResult from the CLI API. set_wait_to_restore ( target , value ) \u00b6 Configures the wait-to-restore timer for the specified slot or port(s). This timer delays the notification of a link-up event. Parameters: target ( str ) \u2013 The target interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range) value ( int ) \u2013 Wait-to-restore timer in seconds (0 disables the timer). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If value is negative or target is improperly formatted. set_wait_to_shutdown ( target , value ) \u00b6 Configures the wait-to-shutdown timer for the specified slot or port(s). This timer delays the notification of a link-down event. Parameters: target ( str ) \u2013 The target interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range) value ( int ) \u2013 Wait-to-shutdown timer in seconds (0 disables the timer). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If value is negative or target is improperly formatted. show_interface_accounting ( port ) \u00b6 Retrieve detailed status or accounting of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. accounting \u2013 If True, retrieve accounting info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails. show_interface_capability ( port ) \u00b6 Retrieve detailed status or capability of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. capability \u2013 If True, retrieve capability info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails. show_interface_counters ( port ) \u00b6 Retrieve detailed status or counter of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. accounting \u2013 If True, retrieve counter info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails. show_interface_counters_errors ( port ) \u00b6 Retrieve detailed error counters of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. counter ( errors ) \u2013 If True, retrieve error counter info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails.","title":"Interface"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint","text":"Bases: BaseEndpoint Provides interface-related configuration and status management endpoints for Alcatel-Lucent OmniSwitch using AOS CLI commands via API client.","title":"InterfaceEndpoint"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.admin_disable","text":"Disable administrative state of the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"admin_disable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.admin_enable","text":"Enable administrative state of the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"admin_enable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.autoneg_disable","text":"Disable auto-negotiation on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"autoneg_disable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.autoneg_enable","text":"Enable auto-negotiation on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"autoneg_enable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.clear_statistics","text":"Clear interface statistics counters (Layer 2 or TDR). Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d or \u201c1/3/1-4\u201d). stat_type ( str ) \u2013 \u201cl2-statistics\u201d or \u201ctdr-statistics\u201d. cli_only ( bool , default: False ) \u2013 Whether to include \u201ccli\u201d for l2-statistics. Returns: ApiResult \u2013 ApiResult of the CLI command. Raises: ValueError \u2013 If input is invalid.","title":"clear_statistics"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.clear_violation","text":"Clears all the MAC address violation logs for a specified port or link aggregate. Parameters: target ( str ) \u2013 Port in the format \u2018chassis/slot/port[-port2]\u2019 or linkagg ID/range like \u20181-2\u2019. is_linkagg ( bool , default: False ) \u2013 If True, clears violation for a linkagg; otherwise, clears for port(s). Returns: ApiResult \u2013 ApiResult from the CLI API.","title":"clear_violation"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.epp_disable","text":"Disable EPP on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"epp_disable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.epp_enable","text":"Enable EPP on the interface. Parameters: port ( str ) \u2013 Port or range string. Returns: ApiResult \u2013 ApiResult with updated interface status.","title":"epp_enable"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.get_interface","text":"Retrieve detailed status of a specific port. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d. Returns: Optional [ dict ] \u2013 A dictionary of parsed interface details or None if the request fails.","title":"get_interface"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.list","text":"Retrieve the status of all interfaces. Returns: ApiResult \u2013 An ApiResult with parsed interface status list if available.","title":"list"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_alias","text":"Set or clear the alias (description) for a single port. Parameters: port ( str ) \u2013 A single port string (e.g., \u201c1/1/1\u201d). alias ( str ) \u2013 Alias string (e.g., \u201cUplink to Core\u201d) or empty \u201c\u201d to clear. Returns: ApiResult \u2013 An ApiResult with the updated interface detail. Raises: ValueError \u2013 If a port range is given (not supported by this command).","title":"set_alias"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_ddm_status","text":"Configures the Digital Diagnostics Monitoring (DDM) administrative status. Parameters: state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to turn on DDM monitoring; \u201cdisable\u201d to turn it off. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If an invalid state is provided.","title":"set_ddm_status"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_duplex","text":"Set duplex mode for a port, port range, or slot. Parameters: target ( str ) \u2013 Port (e.g., \u201c1/3/1\u201d), port range (e.g., \u201c1/3/1-4\u201d), or slot (e.g., \u201c1/3\u201d). mode ( str ) \u2013 One of \u201cfull\u201d, \u201chalf\u201d, or \u201cauto\u201d. Returns: ApiResult \u2013 An ApiResult with updated interface status if applicable. Raises: ValueError \u2013 If duplex mode is invalid.","title":"set_duplex"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_eee","text":"Enables or disables Energy Efficient Ethernet (EEE) on the specified port(s) or slot. Parameters: target ( str ) \u2013 The interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to turn on EEE, \u201cdisable\u201d to turn it off. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If state is not \u201cenable\u201d or \u201cdisable\u201d.","title":"set_eee"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_flood_limit","text":"Configure flood limit settings for broadcast, multicast, unknown unicast, or all traffic types. Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). traffic_type ( str ) \u2013 One of: \u201cbcast\u201d, \u201cmcast\u201d, \u201cuucast\u201d, \u201call\u201d. rate_mode ( str ) \u2013 One of: \u201cpps\u201d, \u201cmbps\u201d, \u201ccap%\u201d, \u201cenable\u201d, \u201cdisable\u201d, \u201cdefault\u201d. rate_value ( Union [ int , Literal ['enable', 'disable', 'default']] ) \u2013 The value for the selected rate_mode, or \u201cenable\u201d/\u201ddisable\u201d/\u201ddefault\u201d. low_threshold ( Optional [ int ] , default: None ) \u2013 Optional low threshold value (must be lower than rate_value, when applicable). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If input validation fails.","title":"set_flood_limit"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_flood_limit_action","text":"Configure the action taken when flood rate limits are violated for a given traffic type. Parameters: target ( str ) \u2013 Slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). traffic_type ( Literal ['bcast', 'mcast', 'uucast', 'all'] ) \u2013 One of: \u201cbcast\u201d, \u201cmcast\u201d, \u201cuucast\u201d, \u201call\u201d. action ( Literal ['shutdown', 'trap', 'default'] ) \u2013 One of: \u201cshutdown\u201d, \u201ctrap\u201d, \u201cdefault\u201d. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If any argument is invalid.","title":"set_flood_limit_action"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_hybrid_mode","text":"Configures the mode of a combo port to either fiber or copper. Parameters: target ( str ) \u2013 The interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) mode ( Literal ['fiber', 'copper'] ) \u2013 \u201cfiber\u201d or \u201ccopper\u201d Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If mode is not \u201cfiber\u201d or \u201ccopper\u201d.","title":"set_hybrid_mode"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_ingress_bandwidth","text":"Configures ingress bandwidth settings on the specified slot or port(s). Parameters: target ( str ) \u2013 Target slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). action ( Union [ Literal ['enable', 'disable'], int ] ) \u2013 \u201cenable\u201d, \u201cdisable\u201d, or an integer Mbps value. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If invalid action value.","title":"set_ingress_bandwidth"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_interface","text":"Set an interface parameter and return updated status for all affected ports. Parameters: port ( str ) \u2013 Port or range string, e.g., \u201c1/1/1\u201d or \u201c1/1/1-3\u201d. parameter ( str ) \u2013 One of \u201cadmin-state\u201d, \u201cautoneg\u201d, or \u201cepp\u201d. value ( str ) \u2013 \u201cenable\u201d or \u201cdisable\u201d. Returns: ApiResult \u2013 An ApiResult with a list of updated interface statuses.","title":"set_interface"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_link_trap","text":"Enables or disables link trap messages on the specified interface(s). Parameters: target ( str ) \u2013 Target slot (e.g., \u201c1/3\u201d) or port/port-range (e.g., \u201c1/2/1\u201d, \u201c1/1/1-6\u201d). state ( Literal ['enable', 'disable'] ) \u2013 \u201cenable\u201d to generate trap messages when port changes state, \u201cdisable\u201d otherwise. Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If an invalid state is provided.","title":"set_link_trap"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_loopback","text":"Enables or disables loopback mode for the specified front-panel port. Parameters: port ( str ) \u2013 The front-panel port(s) in the format: - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range of ports) enable ( bool , default: True ) \u2013 True to enable loopback, False to disable using the \u2018no\u2019 form. Returns: ApiResult \u2013 ApiResult from the CLI API.","title":"set_loopback"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_max_frame_size","text":"Configure the maximum frame size on a port or slot. Parameters: target ( str ) \u2013 Target slot (e.g. \u201c1/3\u201d) or port/port-range (e.g. \u201c1/3/1\u201d, \u201c1/3/1-4\u201d). size ( int ) \u2013 Frame size in bytes (valid range: 1518 to 9216). Returns: ApiResult \u2013 ApiResult of the CLI command. Raises: ValueError \u2013 If the target or size is invalid.","title":"set_max_frame_size"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_portgroup_speed","text":"Configures the speed of the ports within a port group. Parameters: port_group_number ( int ) \u2013 The port group number (e.g., 1, 2, 3\u2026). slot ( str ) \u2013 The chassis/slot identifier (e.g., \u201c1/1\u201d). group_range ( str ) \u2013 The group or group range (e.g., \u201c1\u201d, \u201c2-4\u201d). speed ( Literal ['auto', '25G', '10G'] ) \u2013 The desired speed for the port group (\u201cauto\u201d, \u201c25G\u201d, or \u201c10G\u201d). Returns: ApiResult \u2013 ApiResult from the CLI API.","title":"set_portgroup_speed"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_speed","text":"Set the speed for one or more interfaces. Parameters: target ( str ) \u2013 Port or range string, e.g., \u201c1/1/1\u201d or \u201c1/1/1-3\u201d. speed ( str ) \u2013 Allowed values include \u201c10\u201d, \u201c100\u201d, \u2026, \u201c100000\u201d, \u201cauto\u201d, or \u201cmax 100\u201d/\u201dmax 1000\u201d/etc. Returns: ApiResult \u2013 An ApiResult with updated interface status per affected port. Raises: ValueError \u2013 If the speed value is invalid.","title":"set_speed"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_violation_recovery_maximum","text":"Configures the maximum number of recovery attempts for MAC address violation recovery. Parameters: scope ( Literal ['global', 'slot', 'port'] ) \u2013 \u201cglobal\u201d applies to all ports, \u201cslot\u201d applies to a chassis/slot, \u201cport\u201d applies to a port or range. value ( Union [ int , Literal ['infinite', 'default']] ) \u2013 Integer (0\u201350), \u201cinfinite\u201d, or \u201cdefault\u201d. target ( Optional [ str ] , default: None ) \u2013 Optional. Required for \u201cslot\u201d or \u201cport\u201d. E.g., \u20181/1\u2019 (slot), \u20181/1/1\u2019, or \u20181/1/1-3\u2019 (ports). Returns: ApiResult \u2013 ApiResult from the CLI API.","title":"set_violation_recovery_maximum"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_wait_to_restore","text":"Configures the wait-to-restore timer for the specified slot or port(s). This timer delays the notification of a link-up event. Parameters: target ( str ) \u2013 The target interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range) value ( int ) \u2013 Wait-to-restore timer in seconds (0 disables the timer). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If value is negative or target is improperly formatted.","title":"set_wait_to_restore"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.set_wait_to_shutdown","text":"Configures the wait-to-shutdown timer for the specified slot or port(s). This timer delays the notification of a link-down event. Parameters: target ( str ) \u2013 The target interface scope. Accepts: - \u201cslot x/y\u201d - \u201cport x/y/z\u201d - \u201cport x/y/z-a\u201d (range) value ( int ) \u2013 Wait-to-shutdown timer in seconds (0 disables the timer). Returns: ApiResult \u2013 ApiResult from the CLI API. Raises: ValueError \u2013 If value is negative or target is improperly formatted.","title":"set_wait_to_shutdown"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.show_interface_accounting","text":"Retrieve detailed status or accounting of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. accounting \u2013 If True, retrieve accounting info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails.","title":"show_interface_accounting"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.show_interface_capability","text":"Retrieve detailed status or capability of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. capability \u2013 If True, retrieve capability info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails.","title":"show_interface_capability"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.show_interface_counters","text":"Retrieve detailed status or counter of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. accounting \u2013 If True, retrieve counter info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails.","title":"show_interface_counters"},{"location":"endpoints/interface/#Aos8ApiBuilder.endpoints.interface.InterfaceEndpoint.show_interface_counters_errors","text":"Retrieve detailed error counters of a specific port or port range. Parameters: port ( str ) \u2013 Port identifier string, e.g., \u201c1/1/1\u201d, \u201c1/1/1-1/1/4\u201d, or \u201c1/1\u201d. counter ( errors ) \u2013 If True, retrieve error counter info instead of detailed status. Returns: ApiResult \u2013 A dictionary (or list of dicts) of parsed interface data, or None if request fails.","title":"show_interface_counters_errors"},{"location":"endpoints/ip/","text":"IPInterfaceEndpoint \u00b6 Bases: BaseEndpoint Endpoint to manage IP interfaces on an Alcatel-Lucent OmniSwitch using CLI-based API calls. create ( if_name , address = None , vip_address = None , mask = None , admin_state = None , vlan = None , service = None , forward = None , local_proxy_arp = None , encapsulation = None , primary = None ) \u00b6 Create a new IP interface with specified parameters. Parameters: if_name ( str ) \u2013 Name of the interface. address ( Optional [ str ] , default: None ) \u2013 IP address. vip_address ( Optional [ str ] , default: None ) \u2013 Virtual IP address. mask ( Optional [ str ] , default: None ) \u2013 Subnet mask. admin_state ( Optional [ str ] , default: None ) \u2013 Interface admin state, either \u2018enable\u2019 or \u2018disable\u2019. vlan ( Optional [ int ] , default: None ) \u2013 VLAN ID. service ( Optional [ int ] , default: None ) \u2013 Associated service ID. forward ( Optional [ bool ] , default: None ) \u2013 Enable or disable packet forwarding. local_proxy_arp ( Optional [ bool ] , default: None ) \u2013 Enable or disable local proxy ARP. encapsulation ( Optional [ str ] , default: None ) \u2013 Encapsulation type (\u2018e2\u2019 or \u2018snap\u2019). primary ( Optional [ bool ] , default: None ) \u2013 Set as primary interface. Returns: ApiResult ( ApiResult ) \u2013 Result of the creation operation or error response. delete ( if_name ) \u00b6 Delete an existing IP interface. Parameters: if_name ( str ) \u2013 Name of the interface to delete. Returns: ApiResult ( ApiResult ) \u2013 Result of the deletion operation or error response. edit ( if_name , address = None , vip_address = None , mask = None , admin_state = None , vlan = None , service = None , forward = None , local_proxy_arp = None , encapsulation = None , primary = None ) \u00b6 Edit an existing IP interface with updated parameters. Parameters: if_name ( str ) \u2013 Name of the interface. address ( Optional [ str ] , default: None ) \u2013 IP address. vip_address ( Optional [ str ] , default: None ) \u2013 Virtual IP address. mask ( Optional [ str ] , default: None ) \u2013 Subnet mask. admin_state ( Optional [ str ] , default: None ) \u2013 Interface admin state, either \u2018enable\u2019 or \u2018disable\u2019. vlan ( Optional [ int ] , default: None ) \u2013 VLAN ID. service ( Optional [ int ] , default: None ) \u2013 Associated service ID. forward ( Optional [ bool ] , default: None ) \u2013 Enable or disable packet forwarding. local_proxy_arp ( Optional [ bool ] , default: None ) \u2013 Enable or disable local proxy ARP. encapsulation ( Optional [ str ] , default: None ) \u2013 Encapsulation type (\u2018e2\u2019 or \u2018snap\u2019). primary ( Optional [ bool ] , default: None ) \u2013 Set as primary interface. Returns: ApiResult ( ApiResult ) \u2013 Result of the edit operation or error response. list () \u00b6 Retrieve a list of all configured IP interfaces. Returns: ApiResult \u2013 The result object containing parsed output of the command show ip interface .","title":"IP"},{"location":"endpoints/ip/#Aos8ApiBuilder.endpoints.ip.IPInterfaceEndpoint","text":"Bases: BaseEndpoint Endpoint to manage IP interfaces on an Alcatel-Lucent OmniSwitch using CLI-based API calls.","title":"IPInterfaceEndpoint"},{"location":"endpoints/ip/#Aos8ApiBuilder.endpoints.ip.IPInterfaceEndpoint.create","text":"Create a new IP interface with specified parameters. Parameters: if_name ( str ) \u2013 Name of the interface. address ( Optional [ str ] , default: None ) \u2013 IP address. vip_address ( Optional [ str ] , default: None ) \u2013 Virtual IP address. mask ( Optional [ str ] , default: None ) \u2013 Subnet mask. admin_state ( Optional [ str ] , default: None ) \u2013 Interface admin state, either \u2018enable\u2019 or \u2018disable\u2019. vlan ( Optional [ int ] , default: None ) \u2013 VLAN ID. service ( Optional [ int ] , default: None ) \u2013 Associated service ID. forward ( Optional [ bool ] , default: None ) \u2013 Enable or disable packet forwarding. local_proxy_arp ( Optional [ bool ] , default: None ) \u2013 Enable or disable local proxy ARP. encapsulation ( Optional [ str ] , default: None ) \u2013 Encapsulation type (\u2018e2\u2019 or \u2018snap\u2019). primary ( Optional [ bool ] , default: None ) \u2013 Set as primary interface. Returns: ApiResult ( ApiResult ) \u2013 Result of the creation operation or error response.","title":"create"},{"location":"endpoints/ip/#Aos8ApiBuilder.endpoints.ip.IPInterfaceEndpoint.delete","text":"Delete an existing IP interface. Parameters: if_name ( str ) \u2013 Name of the interface to delete. Returns: ApiResult ( ApiResult ) \u2013 Result of the deletion operation or error response.","title":"delete"},{"location":"endpoints/ip/#Aos8ApiBuilder.endpoints.ip.IPInterfaceEndpoint.edit","text":"Edit an existing IP interface with updated parameters. Parameters: if_name ( str ) \u2013 Name of the interface. address ( Optional [ str ] , default: None ) \u2013 IP address. vip_address ( Optional [ str ] , default: None ) \u2013 Virtual IP address. mask ( Optional [ str ] , default: None ) \u2013 Subnet mask. admin_state ( Optional [ str ] , default: None ) \u2013 Interface admin state, either \u2018enable\u2019 or \u2018disable\u2019. vlan ( Optional [ int ] , default: None ) \u2013 VLAN ID. service ( Optional [ int ] , default: None ) \u2013 Associated service ID. forward ( Optional [ bool ] , default: None ) \u2013 Enable or disable packet forwarding. local_proxy_arp ( Optional [ bool ] , default: None ) \u2013 Enable or disable local proxy ARP. encapsulation ( Optional [ str ] , default: None ) \u2013 Encapsulation type (\u2018e2\u2019 or \u2018snap\u2019). primary ( Optional [ bool ] , default: None ) \u2013 Set as primary interface. Returns: ApiResult ( ApiResult ) \u2013 Result of the edit operation or error response.","title":"edit"},{"location":"endpoints/ip/#Aos8ApiBuilder.endpoints.ip.IPInterfaceEndpoint.list","text":"Retrieve a list of all configured IP interfaces. Returns: ApiResult \u2013 The result object containing parsed output of the command show ip interface .","title":"list"},{"location":"endpoints/system/","text":"SystemEndpoint \u00b6 Bases: BaseEndpoint Endpoint to manage system-level configuration on an Alcatel-Lucent OmniSwitch using CLI-based API commands. list () \u00b6 Retrieve current system configuration including name, contact, location, time, and timezone. Returns: ApiResult \u2013 The parsed result of the show system command. set_contact ( contact ) \u00b6 Set the system contact information. Parameters: contact ( str ) \u2013 Contact name or information string. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration. set_date ( data ) \u00b6 Set the system date. Parameters: data ( str ) \u2013 Date string in the required CLI format (e.g., \u201cMM/DD/YYYY\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration. set_location ( location ) \u00b6 Set the system location. Parameters: location ( str ) \u2013 Location string describing where the system is deployed. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration. set_name ( name ) \u00b6 Set the system name. Parameters: name ( str ) \u2013 The desired system name. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration. set_time ( time ) \u00b6 Set the system time. Parameters: time ( str ) \u2013 Time string in the required CLI format (e.g., \u201cHH:MM:SS\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration. set_timezone ( timezone ) \u00b6 Set the system timezone. Parameters: timezone ( str ) \u2013 Timezone string (e.g., \u201cUTC+8\u201d, \u201cPST\u201d, \u201cGMT+1\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"System"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint","text":"Bases: BaseEndpoint Endpoint to manage system-level configuration on an Alcatel-Lucent OmniSwitch using CLI-based API commands.","title":"SystemEndpoint"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.list","text":"Retrieve current system configuration including name, contact, location, time, and timezone. Returns: ApiResult \u2013 The parsed result of the show system command.","title":"list"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_contact","text":"Set the system contact information. Parameters: contact ( str ) \u2013 Contact name or information string. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_contact"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_date","text":"Set the system date. Parameters: data ( str ) \u2013 Date string in the required CLI format (e.g., \u201cMM/DD/YYYY\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_date"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_location","text":"Set the system location. Parameters: location ( str ) \u2013 Location string describing where the system is deployed. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_location"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_name","text":"Set the system name. Parameters: name ( str ) \u2013 The desired system name. Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_name"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_time","text":"Set the system time. Parameters: time ( str ) \u2013 Time string in the required CLI format (e.g., \u201cHH:MM:SS\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_time"},{"location":"endpoints/system/#Aos8ApiBuilder.endpoints.system.SystemEndpoint.set_timezone","text":"Set the system timezone. Parameters: timezone ( str ) \u2013 Timezone string (e.g., \u201cUTC+8\u201d, \u201cPST\u201d, \u201cGMT+1\u201d). Returns: ApiResult ( ApiResult ) \u2013 Result of the operation or the updated system configuration.","title":"set_timezone"},{"location":"endpoints/vlan/","text":"VlanEndpoint \u00b6 Bases: BaseEndpoint Endpoint for managing VLAN configuration via the AOS CLI API. create ( vlan_id , description = None , mtu = 1500 ) \u00b6 Create a new VLAN with optional description and MTU. Parameters: vlan_id ( int ) \u2013 VLAN ID to create. description ( Optional [ str ] , default: None ) \u2013 VLAN name/description. Defaults to \u201cVLAN_{vlan_id}\u201d. mtu ( int , default: 1500 ) \u2013 MTU size for the VLAN. Defaults to 1500. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful. delete ( vlan_id ) \u00b6 Delete a VLAN by its ID. Parameters: vlan_id ( int ) \u2013 The VLAN ID to remove. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful. edit ( vlan_id , description = None , mtu = 1500 ) \u00b6 Edit an existing VLAN\u2019s description and MTU. Parameters: vlan_id ( int ) \u2013 VLAN ID to modify. description ( Optional [ str ] , default: None ) \u2013 New VLAN name/description. Defaults to \u201cVLAN_{vlan_id}\u201d. mtu ( int , default: 1500 ) \u2013 Updated MTU size. Defaults to 1500. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful. list () \u00b6 Retrieve the list of VLANs. Returns: ApiResult \u2013 Parsed VLAN data from the switch.","title":"VLAN"},{"location":"endpoints/vlan/#Aos8ApiBuilder.endpoints.vlan.VlanEndpoint","text":"Bases: BaseEndpoint Endpoint for managing VLAN configuration via the AOS CLI API.","title":"VlanEndpoint"},{"location":"endpoints/vlan/#Aos8ApiBuilder.endpoints.vlan.VlanEndpoint.create","text":"Create a new VLAN with optional description and MTU. Parameters: vlan_id ( int ) \u2013 VLAN ID to create. description ( Optional [ str ] , default: None ) \u2013 VLAN name/description. Defaults to \u201cVLAN_{vlan_id}\u201d. mtu ( int , default: 1500 ) \u2013 MTU size for the VLAN. Defaults to 1500. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful.","title":"create"},{"location":"endpoints/vlan/#Aos8ApiBuilder.endpoints.vlan.VlanEndpoint.delete","text":"Delete a VLAN by its ID. Parameters: vlan_id ( int ) \u2013 The VLAN ID to remove. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful.","title":"delete"},{"location":"endpoints/vlan/#Aos8ApiBuilder.endpoints.vlan.VlanEndpoint.edit","text":"Edit an existing VLAN\u2019s description and MTU. Parameters: vlan_id ( int ) \u2013 VLAN ID to modify. description ( Optional [ str ] , default: None ) \u2013 New VLAN name/description. Defaults to \u201cVLAN_{vlan_id}\u201d. mtu ( int , default: 1500 ) \u2013 Updated MTU size. Defaults to 1500. Returns: ApiResult ( ApiResult ) \u2013 API response, including the updated VLAN list if successful.","title":"edit"},{"location":"endpoints/vlan/#Aos8ApiBuilder.endpoints.vlan.VlanEndpoint.list","text":"Retrieve the list of VLANs. Returns: ApiResult \u2013 Parsed VLAN data from the switch.","title":"list"},{"location":"endpoints/vpa/","text":"VlanPortAssociation \u00b6 Bases: BaseEndpoint Endpoint for managing VLAN-port associations via the AOS CLI API. create ( port_id , vlan_id , mode = 'untagged' ) \u00b6 Add a port to a VLAN with the specified tagging mode. Parameters: port_id ( str ) \u2013 Port identifier (e.g., \u201c1/1\u201d). vlan_id ( str ) \u2013 VLAN ID to associate with the port. mode ( str , default: 'untagged' ) \u2013 Tagging mode for the port (\u201cuntagged\u201d or \u201ctagged\u201d). Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful. delete ( port_id , vlan_id , mode = 'untagged' ) \u00b6 Remove a port from a VLAN. Parameters: port_id ( str ) \u2013 Port identifier. vlan_id ( str ) \u2013 VLAN ID to disassociate from the port. mode ( str , default: 'untagged' ) \u2013 (Unused) tagging mode hint for clarity. Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful. edit ( port_id , vlan_id , mode = 'untagged' ) \u00b6 Modify a port\u2019s tagging mode in a VLAN. Parameters: port_id ( str ) \u2013 Port identifier. vlan_id ( str ) \u2013 VLAN ID. mode ( str , default: 'untagged' ) \u2013 New tagging mode (\u201cuntagged\u201d or \u201ctagged\u201d). Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful. list ( vlan_id ) \u00b6 List all ports associated with a given VLAN. Parameters: vlan_id ( str ) \u2013 The VLAN ID whose member ports are to be listed. Returns: ApiResult ( ApiResult ) \u2013 API response with parsed list of port members in the VLAN.","title":"VPA"},{"location":"endpoints/vpa/#Aos8ApiBuilder.endpoints.vpa.VlanPortAssociation","text":"Bases: BaseEndpoint Endpoint for managing VLAN-port associations via the AOS CLI API.","title":"VlanPortAssociation"},{"location":"endpoints/vpa/#Aos8ApiBuilder.endpoints.vpa.VlanPortAssociation.create","text":"Add a port to a VLAN with the specified tagging mode. Parameters: port_id ( str ) \u2013 Port identifier (e.g., \u201c1/1\u201d). vlan_id ( str ) \u2013 VLAN ID to associate with the port. mode ( str , default: 'untagged' ) \u2013 Tagging mode for the port (\u201cuntagged\u201d or \u201ctagged\u201d). Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful.","title":"create"},{"location":"endpoints/vpa/#Aos8ApiBuilder.endpoints.vpa.VlanPortAssociation.delete","text":"Remove a port from a VLAN. Parameters: port_id ( str ) \u2013 Port identifier. vlan_id ( str ) \u2013 VLAN ID to disassociate from the port. mode ( str , default: 'untagged' ) \u2013 (Unused) tagging mode hint for clarity. Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful.","title":"delete"},{"location":"endpoints/vpa/#Aos8ApiBuilder.endpoints.vpa.VlanPortAssociation.edit","text":"Modify a port\u2019s tagging mode in a VLAN. Parameters: port_id ( str ) \u2013 Port identifier. vlan_id ( str ) \u2013 VLAN ID. mode ( str , default: 'untagged' ) \u2013 New tagging mode (\u201cuntagged\u201d or \u201ctagged\u201d). Defaults to \u201cuntagged\u201d. Returns: ApiResult ( ApiResult ) \u2013 API response, including updated VLAN membership if successful.","title":"edit"},{"location":"endpoints/vpa/#Aos8ApiBuilder.endpoints.vpa.VlanPortAssociation.list","text":"List all ports associated with a given VLAN. Parameters: vlan_id ( str ) \u2013 The VLAN ID whose member ports are to be listed. Returns: ApiResult ( ApiResult ) \u2013 API response with parsed list of port members in the VLAN.","title":"list"},{"location":"helper/parser/","text":"parse_interface_accounting ( output ) \u00b6 Parses the CLI output of \u2018show interfaces port accounting\u2019 into a dictionary. Parameters: output ( str ) \u2013 CLI output as a string. Returns: Dict [ str , int ] \u2013 Dictionary mapping each metric to its integer value. parse_interface_counters ( output ) \u00b6 Parses \u2018show interfaces port counters\u2019 CLI output into a dictionary. Parameters: output ( str ) \u2013 CLI raw string from the command. Returns: Dict [ str , int ] \u2013 Dictionary of counters with their values. parse_interface_counters_errors ( output ) \u00b6 Parses \u2018show interfaces port counters errors\u2019 CLI output into a dictionary. Parameters: output ( str ) \u2013 CLI output string. Returns: Dict [ str , float ] \u2013 Dictionary with error counter names and numeric values (float or int). parse_interface_detail ( cli_output ) \u00b6 Parses \u2018show interface detail\u2019 CLI output including Rx and Tx subsections. :param cli_output: Raw CLI output as a string :return: Dictionary with top-level and Rx/Tx values parse_interface_status ( cli_output ) \u00b6 Parses \u2018show interfaces\u2019 status CLI output. :param cli_output: Raw CLI output as a string :return: List of dictionaries per interface row parse_ip_interface_output ( cli_output ) \u00b6 Parses the \u2018show ip interface\u2019 CLI output into a list of dictionaries. :param cli_output: Raw CLI output as a string :return: List of dictionaries with parsed interface data parse_output_json ( output ) \u00b6 Parses CLI table output with headers and fixed-format rows. :param output: Raw CLI output as a string :return: List of dictionaries mapping headers to values parse_system_output_json ( cli_output ) \u00b6 Parses CLI output with section headers and key-value pairs into a nested dictionary. :param cli_output: Raw CLI output as a string :return: Dictionary representing parsed output parse_vlan_output_json ( output ) \u00b6 Parses VLAN CLI output in table format. :param output: Raw CLI output as a string :return: List of dictionaries per VLAN entry","title":"Parser"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_interface_accounting","text":"Parses the CLI output of \u2018show interfaces port accounting\u2019 into a dictionary. Parameters: output ( str ) \u2013 CLI output as a string. Returns: Dict [ str , int ] \u2013 Dictionary mapping each metric to its integer value.","title":"parse_interface_accounting"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_interface_counters","text":"Parses \u2018show interfaces port counters\u2019 CLI output into a dictionary. Parameters: output ( str ) \u2013 CLI raw string from the command. Returns: Dict [ str , int ] \u2013 Dictionary of counters with their values.","title":"parse_interface_counters"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_interface_counters_errors","text":"Parses \u2018show interfaces port counters errors\u2019 CLI output into a dictionary. Parameters: output ( str ) \u2013 CLI output string. Returns: Dict [ str , float ] \u2013 Dictionary with error counter names and numeric values (float or int).","title":"parse_interface_counters_errors"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_interface_detail","text":"Parses \u2018show interface detail\u2019 CLI output including Rx and Tx subsections. :param cli_output: Raw CLI output as a string :return: Dictionary with top-level and Rx/Tx values","title":"parse_interface_detail"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_interface_status","text":"Parses \u2018show interfaces\u2019 status CLI output. :param cli_output: Raw CLI output as a string :return: List of dictionaries per interface row","title":"parse_interface_status"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_ip_interface_output","text":"Parses the \u2018show ip interface\u2019 CLI output into a list of dictionaries. :param cli_output: Raw CLI output as a string :return: List of dictionaries with parsed interface data","title":"parse_ip_interface_output"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_output_json","text":"Parses CLI table output with headers and fixed-format rows. :param output: Raw CLI output as a string :return: List of dictionaries mapping headers to values","title":"parse_output_json"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_system_output_json","text":"Parses CLI output with section headers and key-value pairs into a nested dictionary. :param cli_output: Raw CLI output as a string :return: Dictionary representing parsed output","title":"parse_system_output_json"},{"location":"helper/parser/#Aos8ApiBuilder.helper.parse_vlan_output_json","text":"Parses VLAN CLI output in table format. :param output: Raw CLI output as a string :return: List of dictionaries per VLAN entry","title":"parse_vlan_output_json"}]}